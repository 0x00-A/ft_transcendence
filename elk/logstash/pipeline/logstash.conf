input {
  file {
    path => "/var/log/django/*.log"
    start_position => "beginning"
    # sincedb_path => "/dev/null"
    sincedb_path => "/usr/share/logstash/config/sincedb"
    mode => "tail"
    type => "django"
  }
  file {
    path => "/var/log/nginx/access*.log"
    start_position => "beginning"
    # sincedb_path => "/dev/null"
    sincedb_path => "/usr/share/logstash/config/sincedb"
    mode => "tail"
    type => "nginx-access"
  }
  file {
    path => "/var/log/nginx/error*.log"
    start_position => "beginning"
    # sincedb_path => "/dev/null"
    sincedb_path => "/usr/share/logstash/config/sincedb"
    mode => "tail"
    type => "nginx-error"
  }
}

filter {
  if [type] == "django" {
    grok {
      match => {
        "message" => [
          "%{LOGLEVEL:log_level} %{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:component} %{GREEDYDATA:log_message}"
        ]
        # remove_field => "message"
      }
    }
    # Parse the timestamp into an Elasticsearch-compatible date
    date {
      match => ["timestamp", "yyyy-MM-dd HH:mm:ss,SSS"]
      target => "@timestamp"
    }
    mutate {
      add_field => {"serviceName" => "django"}
    }
  }
  if [type] == "nginx-access" {
      grok {
        match => { "message" => ["%{IPORHOST:ip} - %{DATA:user_name} \[%{HTTPDATE:time}\] \"%{WORD:http_method} %{DATA:url} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} %{NUMBER:body_sent_bytes} \"%{DATA:referrer}\" \"%{DATA:agent}\""] }
        # remove_field => "message"
      }
      date {
        match => ["time", "dd/MMM/YYYY:HH:mm:ss Z"]
        target => "@timestamp"
        remove_field => "time"
      }
      useragent {
        source => "agent"
        target => "user_agent"
        remove_field => "agent"
      }
      geoip {
        source => "ip"
        target => "geoip"
      }
      mutate {
        add_field => {"serviceName" => "nginx"}
      }
  }
  if [type] == "nginx-error" {
      grok {
        match => { "message" => ["%{DATA:time} \[%{DATA:log_level}\] %{NUMBER:pid}#%{NUMBER:tid}: (\*%{NUMBER:connection_id} )?%{GREEDYDATA:messageTmp}"] }
        # remove_field => "message"
      }
      date {
        match => ["time", "YYYY/MM/dd HH:mm:ss"]
        target => "@timestamp"
        remove_field => "time"
      }

      mutate {
        rename => {"messageTmp" => "message"}
        add_field => {"serviceName" => "nginx"}
      }
  }
}

output {
	elasticsearch {
    hosts => ["https://es:9200"]
    index => "logs-%{+YYYY.MM.dd}"
    user => "elastic"
		password => "${ELASTIC_PASSWORD}"
    # ssl => true
    # cacert => "/usr/share/logstash/config/certs/ca/ca.crt"
    ssl_enabled => true
    ssl_certificate_authorities => ["/usr/share/logstash/config/certs/ca/ca.crt"]
	}
}
