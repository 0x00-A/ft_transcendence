services:
  backend:
    build:
      context: ./backend
      args:
        DEV: "true"
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
    command: >
      sh -c "python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    environment:
      # - DJANGO_ALLOWED_HOSTS=0.0.0.0,localhost,127.0.0.1
      - DB_HOST=$DB_HOST
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
    networks:
      - default_network
    depends_on:
      db:
        condition: service_started

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile

    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/frontend/src
      - ./frontend/public:/app/frontend/public
    # volumes:
    #   - ./frontend:/app/frontend

    depends_on:
      backend:
        condition: service_started

  db:
    image: postgres:13-alpine
    # ports:
    #   - '5432:5432'
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=$DB_NAME
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASS
    networks:
      - default_network

volumes:
  dev-db-data:

networks:
  default_network:
    driver: bridge
